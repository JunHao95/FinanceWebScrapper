name: Manual Finance Scraper Test
on:
  # Only manual triggering for testing
  workflow_dispatch:
    inputs:
      test_ticker:
        description: 'Single ticker for testing'
        required: true
        default: 'AAPL'
      test_sources:
        description: 'Sources to test (space-separated)'
        required: true
        default: 'yahoo finviz'
      dry_run:
        description: 'Dry run (no email sending)'
        required: false
        type: boolean
        default: true

jobs:
  test-finance-scraper:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          
      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: 🧪 Test Single Ticker
        env:
          ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
          FINHUB_API_KEY: ${{ secrets.FINHUB_API_KEY }}
          CONNECTION_POOL_SIZE: 10
          CONNECTION_POOL_MAXSIZE: 10
        run: |
          echo "🧪 Testing single ticker: ${{ github.event.inputs.test_ticker }}"
          echo "📊 Sources: ${{ github.event.inputs.test_sources }}"
          
          if [ "${{ github.event.inputs.dry_run }}" == "true" ]; then
            echo "🔄 Running in dry-run mode (no email)"
            python main.py \
              --tickers "${{ github.event.inputs.test_ticker }}" \
              --sources ${{ github.event.inputs.test_sources }} \
              --format text \
              --logging true \
              --log-level debug
          else
            echo "📧 Running with email delivery"
            python main.py \
              --tickers "${{ github.event.inputs.test_ticker }}" \
              --sources ${{ github.event.inputs.test_sources }} \
              --format excel \
              --email "${{ secrets.DEFAULT_EMAIL }}" \
              --logging true \
              --log-level info
          fi
          
      - name: 📊 Show Test Results
        if: always()
        run: |
          echo "📁 Generated files:"
          find output -name "*.csv" -o -name "*.xlsx" -o -name "*.txt" | head -10
          
          echo "📝 Log summary:"
          if [ -f "logs/stock_scraper.log" ]; then
            tail -20 logs/stock_scraper.log
          fi
